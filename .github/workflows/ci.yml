name: GitHub Actions Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
# run tests, run build, create a docker image based on dockerfile      
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: install node packages
        uses: actions/setup-node@v3
        with:
          node-version: '17.9.0'
          cache: 'npm'
      - run: npm install
      - name: Setup npm ci
        run: npm ci
      - name: Test
        run: |
          npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run: npm run build
      - name: Build the Docker image
        run: docker build -t ghcr.io/shurenbergen/angular-starter:${{ github.run_number }} .

# store created docker image in the github packages
      - name: Login to GitHub Packages
        run: echo ${{ secrets.AUTH_TOKEN }} | docker login ghcr.io -u Shurenbergen --password-stdin
      - name: Push the Docker image to GitHub Packages
        run: docker push ghcr.io/shurenbergen/angular-starter:${{ github.run_number }}

# # calculating execute time job
#       - name: calculate time
#         run: |
#           started_at=$(curl   -H "Accept: application/vnd.github.v3+json"   https://api.github.com/repos/Shurenbergen/angular-starter/actions/runs/${{ github.run_id }}/jobs | jq -r '.jobs[].started_at')
#           completed_at=$(curl   -H "Accept: application/vnd.github.v3+json"   https://api.github.com/repos/Shurenbergen/angular-starter/actions/runs/${{ github.run_id }}/jobs | jq -r '.jobs[].completed_at')

#           START_TIME=$(date -d "$started_at" +%s)
#           END_TIME=$(date -d "$completed_at" +%s)

#           ELAPSE=$(( $END_TIME - $START_TIME ))
#           echo $ELAPSE
#           echo "$(($ELAPSE/60))m $(($ELAPSE%60))s"

# send notifications to email     
      - name: Send notification
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # email body as text
          body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}  
          # send email to
          to: Sham-aleksandr@yandex.ru
          # from email name
          from: Sham Aleksandr